name: Main CI

on:
  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # TODO: SETUP TESTS
  # test:
  #   services:
  #     mysql:
  #       image: mariadb:10
  #       env:
  #         MYSQL_ALLOW_EMPTY_PASSWORD: yes
  #         MYSQL_DATABASE: iphitech_backend
  #       ports:
  #         - 3306:3306
  #       options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

  #   name: Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: '8.0'
  #         extensions: dom, curl, libxml, mbstring, zip, pdo, sqlite, pdo_sqlite, gd, pdo_mysql, fileinfo, ftp, redis, memcached
  #         tools: composer:v2
  #         coverage: none

  #     - name: Validate composer.json and composer.lock
  #       run: |
  #         composer validate --strict

  #     - name: Cache Composer dependencies
  #       id: composer-cache
  #       uses: actions/cache@v2
  #       with:
  #         path: ./vendor
  #         key: ${{ runner.os }}-php8.0-${{ hashFiles('composer.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-php8.0-

  #     - name: Create .env file and write permission to storage directory
  #       run: |
  #         cp .env.testing .env
  #         chmod -R 777 storage

  #     - name: Install Composer Dependencies
  #       run: |
  #         composer -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist --optimize-autoloader install

  #     - name: Run database migration and seeder
  #       env:
  #         APP_ENV: testing
  #         DB_HOST: 0.0.0.0
  #         DB_CONNECTION: mysql
  #         DB_USERNAME: root
  #         DB_DATABASE: iphitech_backend
  #         LADA_CACHE_ACTIVE: false
  #       run: |
  #         php artisan migrate --force
  #         php artisan db:seed --force

  #     - name: Setup client with nodejs
  #       id: node-cache
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16'
  #         cache: 'npm'
  #         cache-dependency-path: '**/package-lock.json' # THIS PATTERN did the trick for me.


  #     - name: Build client with nodejs
  #       run: |
  #         npm install --frozen-lockfile
  #         sleep 5
  #         npm run build

  #     - name: Run Integration and Unit test suite
  #       env:
  #         LADA_CACHE_ACTIVE: false
  #       run: |
  #         php artisan serve &
  #         sleep 5
  #         curl -vk http://localhost:8000/


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # needs: [test]
    if: github.ref == 'refs/heads/main-saas'
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MAIN_HOST }}
          key: ${{ secrets.MAIN_KEY }}
          username: ${{ secrets.MAIN_USERNAME }}
          script: |
            cd /var/www/beanicki
            git pull origin main
            composer install
            npm install
            php artisan migrate
            npm run build
            php artisan optimize:clear
